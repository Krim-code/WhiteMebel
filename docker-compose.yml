services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${DJANGO_DB_NAME}
      POSTGRES_USER: ${DJANGO_DB_USER}
      POSTGRES_PASSWORD: ${DJANGO_DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - pg_data:/var/lib/postgresql/data

  web:
    build: ./whitemebel
    environment:
      DJANGO_DEBUG: ${DJANGO_DEBUG:-0}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS:-*}
      DJANGO_CSRF_TRUSTED_ORIGINS: ${DJANGO_CSRF_TRUSTED_ORIGINS:-}
      DJANGO_DB_NAME: ${DJANGO_DB_NAME}
      DJANGO_DB_USER: ${DJANGO_DB_USER}
      DJANGO_DB_PASSWORD: ${DJANGO_DB_PASSWORD}
      DJANGO_DB_HOST: db
      DJANGO_DB_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - static_data:/app/staticfiles
      - media_data:/app/media

      
  nuxt:
    container_name: nuxt-app
    build: ./krim-shop
    # наружу порт не пробрасываем — идём через nginx
    # ports:
    #   - "3000:3000"
    environment:
      NODE_ENV: production
    restart: unless-stopped
    # для продакшна обычно МАУНТЫ НЕ НУЖНЫ.
    # если правда надо — оставь, но лучше собрать образ без них:
    # volumes:
    #   - .:/app
    # #   - /app/node_modules
    # ports:
    #   - "3000:3000"

  nginx:
    image: nginx:alpine
    depends_on:
      - web
      - nuxt
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_data:/static:ro
      - media_data:/media:ro

volumes:
  pg_data:
  static_data:
  media_data:
